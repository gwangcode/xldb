import stdwb as wb, os, files, jieba, random, files

# Help information
HelpInfo='''
Fix duplicate addresses: add - to addresses
fix_address xlsx-file .previous ~/dropbox/... -> previous: check and fix the duplicate addresses for the previous xlsx files
'''
# Variables & Functions
la=len(args)
File=''
PFiles=''

# Parameter Options
opts, free=wb.parameter_parse(args, nkey=['help'], pkey=['previous'])

if opts:
  for i in opts:
    if i[0]=='help': err(HelpInfo)
    elif i[0]=='previous': PFiles=i[1]
    #else: pass
    
if free: 
  lf=len(free)
  if lf==2: File=files.fpath(free[1])
  else: err('Illegal parameters')
else: err('Illegal parameters')

# Main code

def modify_address(Address):
  AddrList=list(jieba.cut(Address))
  N=len(AddrList)
  if N>0: 
    n=random.randint(1, N)
    return ''.join(AddrList[:n]+['-']+AddrList[n:])

  else: return Address+'-'

$. close w1;
$. close pw;
if os.path.isfile(File):
  $. open =File .as w1;
  if 'w1' not in `.lw *;`: err('Unable to open '+File)
else: err(File+' not exists')

PreAddrList=[]
if PFiles:
  for i in files.walk(PFiles):
    if os.path.isfile(PFiles):
      $. open =i .as pw;
      if 'pw' in `.lw *;`:
        PrevAddr=$. fetch .from pw/Sheet1/J2:J .bycol
        PreAddrList+=PrevAddr[0]

while True:
  idx=$. idup w1/Sheet1/J
  if idx:
    for i in idx:
      Address=$. fetch .from ='w1/Sheet1/J'+str(i).strip()
      Address=modify_address(Address)
      if PreAddrList:
        while Address in PreAddrList: Address=modify_address(Address)
      $. fetch =Address .to ='w1/Sheet1/J'+str(i).strip()
  else: break





$. save w1;
$. close w1;

  
    